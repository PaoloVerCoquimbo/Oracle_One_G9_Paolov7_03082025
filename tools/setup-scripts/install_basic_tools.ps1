# =====================================================
# SCRIPT DE INSTALACI√ìN DE HERRAMIENTAS B√ÅSICAS
# Funci√≥n: Instalar todas las herramientas necesarias para desarrollo
# Evento: Se ejecuta despu√©s de que Chocolatey est√© completamente instalado
# Fecha: 20/08/2025 - Chile
# Autor: Configuraci√≥n de Entorno de Desarrollo
# =====================================================

Write-Host "üîç VERIFICANDO ESTADO DE CHOCOLATEY..." -ForegroundColor Yellow

# Funci√≥n: Verificar si Chocolatey est√° instalado y funcionando
# Evento: Al inicio del script para confirmar que podemos proceder
try {
    $chocoVersion = choco --version
    Write-Host "‚úÖ Chocolatey instalado: $chocoVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå ERROR: Chocolatey no est√° disponible" -ForegroundColor Red
    Write-Host "Por favor, espera a que termine la instalaci√≥n de Chocolatey" -ForegroundColor Yellow
    exit 1
}

Write-Host "üöÄ INICIANDO INSTALACI√ìN DE HERRAMIENTAS ESENCIALES..." -ForegroundColor Cyan

# Funci√≥n: Actualizar variables de entorno antes de instalar
# Evento: Para asegurar que Chocolatey funcione correctamente
Write-Host "üîÑ Actualizando variables de entorno..." -ForegroundColor Yellow
refreshenv

# TIER 1 - HERRAMIENTAS ESENCIALES PARA DESARROLLO
Write-Host "üì¶ TIER 1: Instalando herramientas b√°sicas..." -ForegroundColor Magenta

# Funci√≥n: Instalar Git para control de versiones
# Evento: Necesario para clonar repos y manejar c√≥digo
Write-Host "  üîß Instalando Git..." -ForegroundColor White
choco install git -y

# Funci√≥n: Instalar Node.js para desarrollo frontend y herramientas JS
# Evento: Necesario para npm, React, Vue, Angular
Write-Host "  üîß Instalando Node.js..." -ForegroundColor White
choco install nodejs -y

# Funci√≥n: Instalar Python para backend y data science
# Evento: Necesario para FastAPI, Jupyter, pandas, etc.
Write-Host "  üîß Instalando Python..." -ForegroundColor White
choco install python -y

# Funci√≥n: Instalar Visual Studio Code como editor principal
# Evento: IDE principal para todo el desarrollo
Write-Host "  üîß Instalando Visual Studio Code..." -ForegroundColor White
choco install vscode -y

Write-Host "‚è≥ Esperando a que las instalaciones se completen..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# TIER 2 - HERRAMIENTAS DE PRODUCTIVIDAD
Write-Host "üì¶ TIER 2: Instalando herramientas de productividad..." -ForegroundColor Magenta

# Funci√≥n: Instalar 7zip para manejo de archivos comprimidos
# Evento: √ötil para descargar y descomprimir librer√≠as
Write-Host "  üîß Instalando 7zip..." -ForegroundColor White
choco install 7zip -y

# Funci√≥n: Instalar Postman para testing de APIs
# Evento: Necesario para probar APIs que desarrolles
Write-Host "  üîß Instalando Postman..." -ForegroundColor White
choco install postman -y

# Funci√≥n: Instalar Google Chrome para testing y desarrollo
# Evento: Browser con mejores DevTools para desarrollo
Write-Host "  üîß Instalando Google Chrome..." -ForegroundColor White
choco install googlechrome -y

Write-Host "üîÑ Actualizando PATH y variables de entorno..." -ForegroundColor Yellow
refreshenv

Write-Host "‚úÖ INSTALACI√ìN COMPLETADA - VERIFICANDO HERRAMIENTAS..." -ForegroundColor Green

# Funci√≥n: Verificar que todas las herramientas se instalaron correctamente
# Evento: Al final del script para confirmar que todo funciona
Write-Host "üß™ Verificando instalaciones:" -ForegroundColor Cyan

try {
    $gitVersion = git --version
    Write-Host "  ‚úÖ Git: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå Git no encontrado" -ForegroundColor Red
}

try {
    $nodeVersion = node --version
    Write-Host "  ‚úÖ Node.js: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå Node.js no encontrado" -ForegroundColor Red
}

try {
    $pythonVersion = python --version
    Write-Host "  ‚úÖ Python: $pythonVersion" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå Python no encontrado" -ForegroundColor Red
}

try {
    $codeVersion = code --version
    Write-Host "  ‚úÖ VS Code instalado correctamente" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå VS Code no encontrado" -ForegroundColor Red
}

Write-Host "üéâ INSTALACI√ìN DE HERRAMIENTAS B√ÅSICAS COMPLETADA" -ForegroundColor Green
Write-Host "üìù SIGUIENTE PASO: Configurar VS Code con extensiones para tu metodolog√≠a" -ForegroundColor Yellow
Write-Host "üöÄ SIGUIENTE PASO: Instalar Tailwind CSS en tu proyecto" -ForegroundColor Yellow

# Funci√≥n: Mostrar comandos siguientes para el usuario
# Evento: Para guiar los pr√≥ximos pasos del setup
Write-Host "`nüìã COMANDOS PARA EJECUTAR A CONTINUACI√ìN:" -ForegroundColor Cyan
Write-Host "1. .\tools\setup-scripts\configure_vscode.ps1" -ForegroundColor White
Write-Host "2. .\tools\setup-scripts\setup_tailwind.ps1" -ForegroundColor White
Write-Host "3. .\tools\setup-scripts\configure_git.ps1" -ForegroundColor White